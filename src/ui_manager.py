"""
UIManager - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º

–ú–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ –∏ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
–í—ã–¥–µ–ª–µ–Ω –∏–∑ expert_matcher.py –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏.

–°–æ–∑–¥–∞–Ω: 2025-10-22 (–≠—Ç–∞–ø 4 —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞)
"""

import tkinter as tk
from tkinter import messagebox, ttk
from typing import TYPE_CHECKING

from .help_content import HelpContent
from .ui_components import TreeviewWithScrollbar, create_title_header

if TYPE_CHECKING:
    from expert_matcher import ExpertMatcher


class UIManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""

    def __init__(self, parent: 'ExpertMatcher'):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ UI

        Args:
            parent: –°—Å—ã–ª–∫–∞ –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä ExpertMatcher
        """
        self.parent = parent

    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        from src.constants import AppConstants

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        title_frame = create_title_header(
            self.parent.root,
            title=f"üî¨ Expert Excel Matcher v{AppConstants.VERSION}",
            subtitle=f"‚ö° –í 100 —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ! ‚Ä¢ {len(self.parent.methods)} –º–µ—Ç–æ–¥–æ–≤ ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è"
        )
        title_frame.pack(fill=tk.X)

        self.parent.notebook = ttk.Notebook(self.parent.root)
        self.parent.notebook.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)

        self.parent.setup_tab = tk.Frame(self.parent.notebook)
        self.parent.notebook.add(self.parent.setup_tab, text="1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
        self.create_setup_tab()

        self.parent.comparison_tab = tk.Frame(self.parent.notebook)
        self.parent.notebook.add(self.parent.comparison_tab, text="2. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤")
        self.create_comparison_tab()

        self.parent.results_tab = tk.Frame(self.parent.notebook)
        self.parent.notebook.add(self.parent.results_tab, text="3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
        self.create_results_tab()

        self.parent.help_tab = tk.Frame(self.parent.notebook)
        self.parent.notebook.add(self.parent.help_tab, text="‚ùì –°–ø—Ä–∞–≤–∫–∞")
        self.create_help_tab()

    def create_help_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ —Å–ø—Ä–∞–≤–∫–∏"""
        main_frame = tk.Frame(self.parent.help_tab, padx=20, pady=20)
        main_frame.pack(fill=tk.BOTH, expand=True)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        tk.Label(main_frame, text="üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º",
                font=("Arial", 14, "bold"), fg="#7C3AED").pack(pady=(0, 15))

        # –°–æ–∑–¥–∞—ë–º canvas –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        canvas = tk.Canvas(main_frame, bg="white")
        scrollbar = ttk.Scrollbar(main_frame, orient="vertical", command=canvas.yview)
        scrollable_frame = tk.Frame(canvas, bg="white")

        scrollable_frame.bind(
            "<Configure>",
            lambda e: canvas.configure(scrollregion=canvas.bbox("all"))
        )

        canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
        canvas.configure(yscrollcommand=scrollbar.set)

        # –†–∞–∑–¥–µ–ª 1: –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–π–ª–∞–º
        section1 = tk.LabelFrame(scrollable_frame, text="üìÇ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤—Ö–æ–¥–Ω—ã–º —Ñ–∞–π–ª–∞–º (Excel/CSV)",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section1.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section1, text=HelpContent.get_file_requirements(), font=("Consolas", 9),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 2: –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã
        section2 = tk.LabelFrame(scrollable_frame, text="‚öôÔ∏è –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section2.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section2, text=HelpContent.get_modes_description(len(self.parent.methods)), font=("Consolas", 9),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 2.5: –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã–±–æ—Ä–∞ –ª—É—á—à–µ–≥–æ –º–µ—Ç–æ–¥–∞
        section2_5 = tk.LabelFrame(scrollable_frame, text="üßÆ –ê–ª–≥–æ—Ä–∏—Ç–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ (v3.0)",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section2_5.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section2_5, text=HelpContent.get_algorithm_description(), font=("Consolas", 8),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 3: –í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤
        section3 = tk.LabelFrame(scrollable_frame, text="üéØ –í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (v3.0)",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section3.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section3, text=HelpContent.get_columns_selection(), font=("Consolas", 9),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 4: –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        section4 = tk.LabelFrame(scrollable_frame, text="üíæ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section4.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section4, text=HelpContent.get_export_options(), font=("Consolas", 9),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 5: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏
        section5 = tk.LabelFrame(scrollable_frame, text="üìö –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section5.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section5, text=HelpContent.get_libraries_description(), font=("Consolas", 9),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 6: –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤
        section6 = tk.LabelFrame(scrollable_frame, text="üîç –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è",
                                font=("Arial", 11, "bold"), padx=15, pady=10, bg="white")
        section6.pack(fill=tk.X, pady=(0, 15))

        tk.Label(section6, text=HelpContent.get_methods_detailed_description(), font=("Consolas", 8),
                justify=tk.LEFT, anchor="w", bg="white").pack(fill=tk.X)

        # –†–∞–∑–¥–µ–ª 7: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
        section7 = tk.LabelFrame(scrollable_frame, text="üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è (v3.0)",
                                 font=("Arial", 11, "bold"), padx=15, pady=10)

        tk.Label(section7, text=HelpContent.get_normalization_description(),
                font=("Consolas", 9), justify=tk.LEFT, anchor="w").pack(anchor=tk.W, fill=tk.X)

        section7.pack(anchor=tk.W, fill=tk.X, pady=(0, 10))

        canvas.pack(side="left", fill="both", expand=True)
        scrollbar.pack(side="right", fill="y")

    def create_setup_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π"""
        # –°–æ–∑–¥–∞–µ–º Canvas –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        canvas = tk.Canvas(self.parent.setup_tab)
        scrollbar = tk.Scrollbar(self.parent.setup_tab, orient="vertical", command=canvas.yview)
        scrollable_frame = tk.Frame(canvas, padx=20, pady=20)

        scrollable_frame.bind(
            "<Configure>",
            lambda e: canvas.configure(scrollregion=canvas.bbox("all"))
        )

        canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
        canvas.configure(yscrollcommand=scrollbar.set)

        canvas.pack(side="left", fill="both", expand=True)
        scrollbar.pack(side="right", fill="y")

        # Bind mousewheel –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        def _on_mousewheel(event):
            canvas.yview_scroll(int(-1*(event.delta/120)), "units")
        canvas.bind_all("<MouseWheel>", _on_mousewheel)

        main_frame = scrollable_frame

        # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        info_frame = tk.LabelFrame(main_frame, text="üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                                   font=("Arial", 11, "bold"), padx=15, pady=15, bg="#F0F9FF")
        info_frame.pack(fill=tk.X, pady=(0, 20))

        description_text = HelpContent.get_app_description(len(self.parent.methods))

        tk.Label(info_frame, text=description_text,
                font=("Consolas", 9), justify=tk.LEFT, anchor="w",
                bg="#F0F9FF", fg="#1E40AF").pack(fill=tk.X)

        files_frame = tk.LabelFrame(main_frame, text="üìÅ –í—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã (Excel / CSV)",
                                    font=("Arial", 11, "bold"), padx=10, pady=10)
        files_frame.pack(fill=tk.X, pady=(0, 20))

        askupo_frame = tk.Frame(files_frame)
        askupo_frame.pack(fill=tk.X, pady=5)
        tk.Label(askupo_frame, text="1Ô∏è‚É£ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö 1 (—Ü–µ–ª–µ–≤–æ–π):",
                font=("Arial", 10, "bold")).pack(anchor=tk.W)
        self.parent.askupo_label = tk.Label(askupo_frame, text="üìÇ –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω", fg="gray", font=("Arial", 9))
        self.parent.askupo_label.pack(anchor=tk.W, padx=20)
        tk.Button(askupo_frame, text="üìÅ –í—ã–±—Ä–∞—Ç—å –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö 1 (—Ü–µ–ª–µ–≤–æ–π)", command=self.parent.select_askupo,
                 bg="#10B981", fg="white", font=("Arial", 9, "bold"),
                 padx=15, pady=5).pack(anchor=tk.W, padx=20, pady=3)

        eatool_frame = tk.Frame(files_frame)
        eatool_frame.pack(fill=tk.X, pady=5)
        tk.Label(eatool_frame, text="2Ô∏è‚É£ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö 2:",
                font=("Arial", 10, "bold")).pack(anchor=tk.W)
        self.parent.eatool_label = tk.Label(eatool_frame, text="üìÇ –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω", fg="gray", font=("Arial", 9))
        self.parent.eatool_label.pack(anchor=tk.W, padx=20)
        tk.Button(eatool_frame, text="üìÅ –í—ã–±—Ä–∞—Ç—å –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö 2", command=self.parent.select_eatool,
                 bg="#10B981", fg="white", font=("Arial", 9, "bold"),
                 padx=15, pady=5).pack(anchor=tk.W, padx=20, pady=3)

        settings_frame = tk.LabelFrame(main_frame, text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏",
                                       font=("Arial", 11, "bold"), padx=10, pady=10)
        settings_frame.pack(fill=tk.X, pady=(0, 20))

        mode_frame = tk.Frame(settings_frame)
        mode_frame.pack(fill=tk.X, pady=5)

        tk.Label(mode_frame, text="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:", font=("Arial", 10, "bold")).pack(anchor=tk.W)

        self.parent.mode_var = tk.StringVar(value="auto")

        tk.Radiobutton(mode_frame,
                      text="ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π - —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –í–´–ë–†–ê–ù–ù–´–ï –º–µ—Ç–æ–¥—ã –∏ –≤—ã–±—Ä–∞–≤ –ª—É—á—à–∏–π —Å–æ–∑–¥–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —ç–∫—Å–µ–ª—å",
                      variable=self.parent.mode_var, value="auto",
                      font=("Arial", 9)).pack(anchor=tk.W, padx=20)
        tk.Radiobutton(mode_frame,
                      text="üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ - —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä–∫–µ (–Ω–µ –±–æ–ª–µ–µ –ø–µ—Ä–≤—ã—Ö 200 –∑–∞–ø–∏—Å–µ–π) –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ª—É—á—à–∏–π",
                      variable=self.parent.mode_var, value="compare",
                      font=("Arial", 9)).pack(anchor=tk.W, padx=20)
        tk.Radiobutton(mode_frame,
                      text="üî¨ –ü–æ–ª–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ - –≤—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ —ç–∫—Å–µ–ª—å",
                      variable=self.parent.mode_var, value="full_compare",
                      font=("Arial", 9)).pack(anchor=tk.W, padx=20)

        # –§—Ä–µ–π–º –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–æ–≤
        self.parent.method_selector_frame = tk.Frame(settings_frame)
        self.parent.method_selector_frame.pack(fill=tk.X, pady=5)

        tk.Label(self.parent.method_selector_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥—ã (–¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤):",
                font=("Arial", 9, "bold")).pack(anchor=tk.W, padx=20)

        tk.Label(self.parent.method_selector_frame,
                text="üí° –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ Ctrl –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤",
                font=("Arial", 8), fg="gray").pack(anchor=tk.W, padx=20)

        # Listbox —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–æ–≤
        listbox_frame = tk.Frame(self.parent.method_selector_frame)
        listbox_frame.pack(anchor=tk.W, padx=20, pady=5)

        methods_scrollbar = tk.Scrollbar(listbox_frame)
        methods_scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

        self.parent.methods_listbox = tk.Listbox(listbox_frame,
                                          selectmode=tk.MULTIPLE,
                                          height=8,
                                          width=80,
                                          yscrollcommand=methods_scrollbar.set,
                                          exportselection=False)
        self.parent.methods_listbox.pack(side=tk.LEFT, fill=tk.BOTH)
        methods_scrollbar.config(command=self.parent.methods_listbox.yview)

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–∞–º–∏
        for method in self.parent.methods:
            self.parent.methods_listbox.insert(tk.END, method.name)

        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –º–µ—Ç–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if self.parent.methods:
            self.parent.methods_listbox.selection_set(0)

        # –ö–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã"
        button_frame = tk.Frame(self.parent.method_selector_frame)
        button_frame.pack(anchor=tk.W, padx=20, pady=5)

        tk.Button(button_frame, text="‚úì –í—ã–±—Ä–∞—Ç—å –≤—Å–µ",
                 command=self.select_all_methods,
                 font=("Arial", 8), padx=10, pady=3).pack(side=tk.LEFT, padx=5)
        tk.Button(button_frame, text="‚úó –°–Ω—è—Ç—å –≤—ã–±–æ—Ä",
                 command=self.deselect_all_methods,
                 font=("Arial", 8), padx=10, pady=3).pack(side=tk.LEFT, padx=5)

        # ==== –ù–û–í–ê–Ø –°–ï–ö–¶–ò–Ø: –í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è ====
        columns_frame = tk.LabelFrame(main_frame, text="–í—ã–±–æ—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è",
                                      font=("Arial", 11, "bold"), padx=10, pady=10)
        columns_frame.pack(fill=tk.X, pady=(0, 10))

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–≤—É—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        columns_container = tk.Frame(columns_frame)
        columns_container.pack(fill=tk.X)

        # –ò—Å—Ç–æ—á–Ω–∏–∫ 1 (–ª–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞)
        source1_frame = tk.Frame(columns_container)
        source1_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=5)

        tk.Label(source1_frame, text="üìÇ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö 1 (—Ü–µ–ª–µ–≤–æ–π):",
                font=("Arial", 10, "bold")).pack(anchor=tk.W, pady=(0, 5))

        tk.Label(source1_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (1-2 —Å—Ç–æ–ª–±—Ü–∞):",
                font=("Arial", 9)).pack(anchor=tk.W)

        listbox_frame1 = tk.Frame(source1_frame)
        listbox_frame1.pack(fill=tk.BOTH, expand=True)

        scrollbar1 = tk.Scrollbar(listbox_frame1)
        scrollbar1.pack(side=tk.RIGHT, fill=tk.Y)

        self.parent.askupo_col_listbox = tk.Listbox(listbox_frame1, selectmode=tk.MULTIPLE,
                                             height=5, yscrollcommand=scrollbar1.set,
                                             exportselection=False)
        self.parent.askupo_col_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar1.config(command=self.parent.askupo_col_listbox.yview)
        self.parent.askupo_col_listbox.bind('<<ListboxSelect>>', self.on_askupo_column_select)

        tk.Checkbutton(source1_frame, text="–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –∏—Å—Ç–æ—á–Ω–∏–∫–∞ 1",
                      variable=self.parent.inherit_askupo_cols_var,
                      font=("Arial", 9)).pack(anchor=tk.W, pady=(5, 0))

        # –ò—Å—Ç–æ—á–Ω–∏–∫ 2 (–ø—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞)
        source2_frame = tk.Frame(columns_container)
        source2_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=5)

        tk.Label(source2_frame, text="üìÇ –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö 2:",
                font=("Arial", 10, "bold")).pack(anchor=tk.W, pady=(0, 5))

        tk.Label(source2_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (1-2 —Å—Ç–æ–ª–±—Ü–∞):",
                font=("Arial", 9)).pack(anchor=tk.W)

        listbox_frame2 = tk.Frame(source2_frame)
        listbox_frame2.pack(fill=tk.BOTH, expand=True)

        scrollbar2 = tk.Scrollbar(listbox_frame2)
        scrollbar2.pack(side=tk.RIGHT, fill=tk.Y)

        self.parent.eatool_col_listbox = tk.Listbox(listbox_frame2, selectmode=tk.MULTIPLE,
                                             height=5, yscrollcommand=scrollbar2.set,
                                             exportselection=False)
        self.parent.eatool_col_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar2.config(command=self.parent.eatool_col_listbox.yview)
        self.parent.eatool_col_listbox.bind('<<ListboxSelect>>', self.on_eatool_column_select)

        tk.Checkbutton(source2_frame, text="–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –∏—Å—Ç–æ—á–Ω–∏–∫–∞ 2",
                      variable=self.parent.inherit_eatool_cols_var,
                      font=("Arial", 9)).pack(anchor=tk.W, pady=(5, 0))

        # –ß–µ–∫–±–æ–∫—Å –¥–ª—è —Ä–µ–∂–∏–º–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
        tk.Checkbutton(columns_frame,
                      text="üîó –†–µ–∂–∏–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ 2 —Å—Ç–æ–ª–±—Ü–∞–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç –≤—ã–±–æ—Ä–∞ 2 —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–∂–¥–æ–º –∏—Å—Ç–æ—á–Ω–∏–∫–µ)",
                      variable=self.parent.multi_column_mode_var,
                      font=("Arial", 9, "bold"), fg="#7C3AED").pack(anchor=tk.W, pady=(10, 0))

        # –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
        info_frame = tk.Frame(columns_frame, bg="#EFF6FF", bd=1, relief=tk.SOLID)
        info_frame.pack(anchor=tk.W, padx=40, pady=(5, 0), fill=tk.X)

        info_text = """‚ÑπÔ∏è –†–ï–ñ–ò–ú –ö–û–ù–ö–ê–¢–ï–ù–ê–¶–ò–ò:

üìù –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
   –ü—Ä–∏–º–µ—Ä: "Microsoft" + "Office" = "Microsoft Office"

   ‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è: vendor+product, –∫–∞—Ç–µ–≥–æ—Ä–∏—è+–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ª—é–±—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏"""

        tk.Label(info_frame, text=info_text,
                font=("Consolas", 8), justify=tk.LEFT, anchor="w",
                bg="#EFF6FF", fg="#1E40AF").pack(fill=tk.X, padx=10, pady=5)

        tk.Label(columns_frame,
                text="üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤, —Å—Ç–æ–ª–±—Ü—ã –ø–æ—è–≤—è—Ç—Å—è –≤ —Å–ø–∏—Å–∫–∞—Ö. –í—ã–±–µ—Ä–∏—Ç–µ 1-2 —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.",
                font=("Arial", 8), fg="gray", wraplength=700, justify=tk.LEFT).pack(anchor=tk.W, pady=(5, 0))

        # ==== –°–ï–ö–¶–ò–Ø: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è ====
        normalization_frame = tk.LabelFrame(main_frame, text="üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö",
                                            font=("Arial", 11, "bold"), padx=15, pady=10, bg="#FFF7ED")
        normalization_frame.pack(fill=tk.X, pady=(10, 0))

        tk.Label(normalization_frame,
                text="‚öôÔ∏è –û–ø—Ü–∏–∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–¥ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º (–ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ –í–°–ï–ú –º–µ—Ç–æ–¥–∞–º):",
                font=("Arial", 9, "bold"), bg="#FFF7ED", fg="#7C2D12").pack(anchor=tk.W, pady=(0, 10))

        # –°–æ–∑–¥–∞—ë–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤
        checkbox_container = tk.Frame(normalization_frame, bg="#FFF7ED")
        checkbox_container.pack(fill=tk.X)

        # –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞
        left_col = tk.Frame(checkbox_container, bg="#FFF7ED")
        left_col.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=5)

        tk.Checkbutton(left_col,
                      text="üè¢ –£–¥–∞–ª—è—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—ã (–û–û–û, Ltd, Inc, GmbH...)",
                      variable=self.parent.norm_remove_legal_var,
                      font=("Arial", 9), bg="#FFF7ED", anchor="w").pack(anchor=tk.W, pady=2)

        tk.Checkbutton(left_col,
                      text="üî¢ –£–¥–∞–ª—è—Ç—å –≤–µ—Ä—Å–∏–∏ (2021, v4.x, R2, SP1, x64, Win10...)",
                      variable=self.parent.norm_remove_versions_var,
                      font=("Arial", 9), bg="#FFF7ED", anchor="w").pack(anchor=tk.W, pady=2)

        tk.Checkbutton(left_col,
                      text="üìù –£–¥–∞–ª—è—Ç—å —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ (–∏, –≤, –Ω–∞, the, a, and...)",
                      variable=self.parent.norm_remove_stopwords_var,
                      font=("Arial", 9), bg="#FFF7ED", anchor="w").pack(anchor=tk.W, pady=2)

        # –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞
        right_col = tk.Frame(checkbox_container, bg="#FFF7ED")
        right_col.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=5)

        tk.Checkbutton(right_col,
                      text="üåç –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã ‚Üí –ª–∞—Ç–∏–Ω–∏—Ü–∞ (–§–æ—Ç–æ—à–æ–ø ‚Üí Fotoshop)",
                      variable=self.parent.norm_transliterate_var,
                      font=("Arial", 9), bg="#FFF7ED", anchor="w").pack(anchor=tk.W, pady=2)

        tk.Checkbutton(right_col,
                      text="üî§ –£–¥–∞–ª—è—Ç—å –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é (!@#$%^&*...)",
                      variable=self.parent.norm_remove_punctuation_var,
                      font=("Arial", 9), bg="#FFF7ED", anchor="w").pack(anchor=tk.W, pady=2)

        # –ü–æ–¥—Å–∫–∞–∑–∫–∞
        hint_text = """üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –í–∫–ª—é—á–∏—Ç–µ –≤—Å–µ –æ–ø—Ü–∏–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏.
–≠—Ç–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–æ–≤—ã—à–∞—é—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–∞ 30-50%!

–ü—Ä–∏–º–µ—Ä: "–û–û–û 1–° –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ 8.3 x64" ‚Üí "predprijatie" (–ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π)"""

        tk.Label(normalization_frame,
                text=hint_text,
                font=("Arial", 8), bg="#FFF7ED", fg="#92400E",
                wraplength=700, justify=tk.LEFT).pack(anchor=tk.W, pady=(10, 0))

        # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –æ–ø—Ü–∏–∏"
        button_frame = tk.Frame(normalization_frame, bg="#FFF7ED")
        button_frame.pack(anchor=tk.W, pady=(10, 0))

        tk.Button(button_frame, text="‚úì –í–∫–ª—é—á–∏—Ç—å –≤—Å–µ –æ–ø—Ü–∏–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)",
                 command=self.enable_all_normalization,
                 bg="#16A34A", fg="white",
                 font=("Arial", 9, "bold"), padx=15, pady=5).pack(side=tk.LEFT, padx=5)

        tk.Button(button_frame, text="‚úó –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –æ–ø—Ü–∏–∏",
                 command=self.disable_all_normalization,
                 bg="#DC2626", fg="white",
                 font=("Arial", 9, "bold"), padx=15, pady=5).pack(side=tk.LEFT, padx=5)

        self.parent.process_btn = tk.Button(main_frame, text="üöÄ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É",
                 command=self.parent.start_processing, bg="#7C3AED", fg="white",
                 font=("Arial", 13, "bold"), padx=50, pady=12,
                 state=tk.DISABLED)
        self.parent.process_btn.pack(pady=20)

    def create_comparison_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤"""
        frame = tk.Frame(self.parent.comparison_tab, padx=20, pady=20)
        frame.pack(fill=tk.BOTH, expand=True)

        tk.Label(frame, text="üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–≤",
                font=("Arial", 13, "bold")).pack(pady=10)

        # –°–æ–∑–¥–∞–µ–º Treeview –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤
        tree_widget = TreeviewWithScrollbar(
            frame,
            columns=("rank", "method", "library", "perfect", "high", "avg_score", "time"),
            headers=[
                ("rank", "üèÜ", 50),
                ("method", "–ú–µ—Ç–æ–¥", 300),
                ("library", "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞", 120),
                ("perfect", "100%", 80),
                ("high", "90-99%", 80),
                ("avg_score", "–°—Ä–µ–¥–Ω–∏–π %", 100),
                ("time", "–í—Ä–µ–º—è", 90),
            ],
            height=15,
            horizontal_scroll=True
        )
        tree_widget.pack(fill=tk.BOTH, expand=True)
        self.parent.comparison_tree = tree_widget.tree

        btn_frame = tk.Frame(frame)
        btn_frame.pack(fill=tk.X, pady=10)

        tk.Button(btn_frame, text="üíæ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤ Excel",
                 command=self.parent.export_comparison, bg="#3B82F6", fg="white",
                 font=("Arial", 10, "bold"), padx=20, pady=5).pack(side=tk.LEFT, padx=5)

    def create_results_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        frame = tk.Frame(self.parent.results_tab, padx=20, pady=20)
        frame.pack(fill=tk.BOTH, expand=True)

        self.parent.result_info_frame = tk.Frame(frame)
        self.parent.result_info_frame.pack(fill=tk.X, pady=(0, 10))

        self.parent.result_stats_frame = tk.Frame(frame)
        self.parent.result_stats_frame.pack(fill=tk.X, pady=(0, 10))

        export_frame = tk.Frame(frame)
        export_frame.pack(fill=tk.X, pady=(0, 10))

        tk.Label(export_frame, text="üíæ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Excel:",
                font=("Arial", 11, "bold")).pack(anchor=tk.W)

        btn_container = tk.Frame(export_frame)
        btn_container.pack(fill=tk.X, pady=5)

        export_buttons = [
            ("üìä –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç", self.parent.export_full, "#4F46E5"),
            ("‚úÖ –¢–æ—á–Ω—ã–µ (100%)", self.parent.export_perfect, "#10B981"),
            ("‚ö†Ô∏è –¢—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ (<90%)", self.parent.export_problems, "#F59E0B"),
            ("‚ùå –ë–µ–∑ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π (0%)", self.parent.export_no_match, "#EF4444"),
        ]

        for text, command, color in export_buttons:
            tk.Button(btn_container, text=text, command=command, bg=color, fg="white",
                     font=("Arial", 10, "bold"), padx=18, pady=6).pack(side=tk.LEFT, padx=3)

        tk.Label(frame, text="üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è (–ø–µ—Ä–≤—ã–µ 50 –∑–∞–ø–∏—Å–µ–π):",
                font=("Arial", 11, "bold")).pack(anchor=tk.W, pady=(10, 5))

        # –°–æ–∑–¥–∞–µ–º Treeview –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        tree_widget = TreeviewWithScrollbar(
            frame,
            columns=("num", "askupo", "eatool", "percent"),
            headers=[
                ("num", "‚Ññ", 50),
                ("askupo", "–ò—Å—Ç–æ—á–Ω–∏–∫ 1 (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º—ã–π —Å—Ç–æ–ª–±–µ—Ü)", 350),
                ("eatool", "–ò—Å—Ç–æ—á–Ω–∏–∫ 2 (—Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü)", 350),
                ("percent", "–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è", 120),
            ],
            height=15
        )
        tree_widget.pack(fill=tk.BOTH, expand=True)
        self.parent.results_tree = tree_widget.tree

    # ========== –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è UI ==========

    def on_askupo_column_select(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ 1"""
        selected_indices = self.parent.askupo_col_listbox.curselection()
        self.parent.selected_askupo_cols = [self.parent.askupo_columns[i] for i in selected_indices]

        # –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å data_manager!
        self.parent.data_manager.selected_source1_cols = self.parent.selected_askupo_cols

        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –º–∞–∫—Å–∏–º—É–º 2 —Å—Ç–æ–ª–±—Ü–∞
        if len(selected_indices) > 2:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
                                 "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 2 —Å—Ç–æ–ª–±—Ü–∞.\n"
                                 "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω.")
            # –û—Ç–º–µ–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä
            self.parent.askupo_col_listbox.selection_clear(selected_indices[-1])
            self.parent.selected_askupo_cols = self.parent.selected_askupo_cols[:-1]
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å data_manager
            self.parent.data_manager.selected_source1_cols = self.parent.selected_askupo_cols

        # –ê–í–¢–û-–†–ï–ñ–ò–ú: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º –≥–∞–ª–∫—É –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ 2 —Å—Ç–æ–ª–±—Ü–∞ –≤ –û–ë–û–ò–• –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
        if len(self.parent.selected_askupo_cols) == 2 and len(self.parent.selected_eatool_cols) == 2:
            self.parent.multi_column_mode_var.set(True)
        elif len(self.parent.selected_askupo_cols) == 1 or len(self.parent.selected_eatool_cols) == 1:
            self.parent.multi_column_mode_var.set(False)

    def on_eatool_column_select(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ 2"""
        selected_indices = self.parent.eatool_col_listbox.curselection()
        self.parent.selected_eatool_cols = [self.parent.eatool_columns[i] for i in selected_indices]

        # –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å data_manager!
        self.parent.data_manager.selected_source2_cols = self.parent.selected_eatool_cols

        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –º–∞–∫—Å–∏–º—É–º 2 —Å—Ç–æ–ª–±—Ü–∞
        if len(selected_indices) > 2:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
                                 "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 2 —Å—Ç–æ–ª–±—Ü–∞.\n"
                                 "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω.")
            # –û—Ç–º–µ–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä
            self.parent.eatool_col_listbox.selection_clear(selected_indices[-1])
            self.parent.selected_eatool_cols = self.parent.selected_eatool_cols[:-1]
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å data_manager
            self.parent.data_manager.selected_source2_cols = self.parent.selected_eatool_cols

        # –ê–í–¢–û-–†–ï–ñ–ò–ú: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º –≥–∞–ª–∫—É –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ 2 —Å—Ç–æ–ª–±—Ü–∞ –≤ –û–ë–û–ò–• –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
        if len(self.parent.selected_askupo_cols) == 2 and len(self.parent.selected_eatool_cols) == 2:
            self.parent.multi_column_mode_var.set(True)
        elif len(self.parent.selected_askupo_cols) == 1 or len(self.parent.selected_eatool_cols) == 1:
            self.parent.multi_column_mode_var.set(False)

    def select_all_methods(self):
        """–í—ã–±—Ä–∞—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã –≤ —Å–ø–∏—Å–∫–µ"""
        self.parent.methods_listbox.selection_set(0, tk.END)

    def deselect_all_methods(self):
        """–°–Ω—è—Ç—å –≤—ã–±–æ—Ä –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤"""
        self.parent.methods_listbox.selection_clear(0, tk.END)

    def enable_all_normalization(self):
        """–í–∫–ª—é—á–∏—Ç—å –≤—Å–µ –æ–ø—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏"""
        self.parent.norm_remove_legal_var.set(True)
        self.parent.norm_remove_versions_var.set(True)
        self.parent.norm_remove_stopwords_var.set(True)
        self.parent.norm_transliterate_var.set(True)
        self.parent.norm_remove_punctuation_var.set(True)
        messagebox.showinfo("‚úì –û–ø—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏",
                           "–í—Å–µ –æ–ø—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã!\n\n"
                           "–≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–∞ 30-50%.")

    def disable_all_normalization(self):
        """–û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –æ–ø—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏"""
        self.parent.norm_remove_legal_var.set(False)
        self.parent.norm_remove_versions_var.set(False)
        self.parent.norm_remove_stopwords_var.set(False)
        self.parent.norm_transliterate_var.set(False)
        self.parent.norm_remove_punctuation_var.set(False)
        messagebox.showinfo("‚úó –û–ø—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏",
                           "–í—Å–µ –æ–ø—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã.\n\n"
                           "–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è (lowercase + trim).")
