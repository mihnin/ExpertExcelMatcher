# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
"""

import sys
import io

if sys.platform == 'win32':
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
    sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫
print("=" * 80)
print("–ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ë–ò–ë–õ–ò–û–¢–ï–ö")
print("=" * 80)

try:
    from rapidfuzz import fuzz, process
    RAPIDFUZZ_AVAILABLE = True
    print("‚úÖ RapidFuzz: –î–û–°–¢–£–ü–ï–ù")
except ImportError:
    RAPIDFUZZ_AVAILABLE = False
    print("‚ùå RapidFuzz: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

try:
    import textdistance
    TEXTDISTANCE_AVAILABLE = True
    print("‚úÖ TextDistance: –î–û–°–¢–£–ü–ï–ù")
except ImportError:
    TEXTDISTANCE_AVAILABLE = False
    print("‚ùå TextDistance: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

try:
    import jellyfish
    JELLYFISH_AVAILABLE = True
    print("‚úÖ Jellyfish: –î–û–°–¢–£–ü–ï–ù")
except ImportError:
    JELLYFISH_AVAILABLE = False
    print("‚ùå Jellyfish: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

try:
    from transliterate import translit
    TRANSLITERATE_AVAILABLE = True
    print("‚úÖ Transliterate: –î–û–°–¢–£–ü–ï–ù")
except ImportError:
    TRANSLITERATE_AVAILABLE = False
    print("‚ùå Transliterate: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

try:
    from FlagEmbedding import BGEM3FlagModel
    BGE_AVAILABLE = True
    print("‚úÖ FlagEmbedding (BGE-M3): –î–û–°–¢–£–ü–ï–ù")
except ImportError as e:
    BGE_AVAILABLE = False
    print(f"‚ùå FlagEmbedding: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
    print(f"   –û—à–∏–±–∫–∞: {e}")

print("\n" + "=" * 80)
print("–ü–†–û–í–ï–†–ö–ê: BGE_AVAILABLE –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
print("=" * 80)

if BGE_AVAILABLE:
    print("‚úÖ BGE-M3 –º–µ—Ç–æ–¥ –î–û–õ–ñ–ï–ù –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    print("\n–í —Å–ø–∏—Å–∫–µ –º–µ—Ç–æ–¥–æ–≤ GUI –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞:")
    print("   'üß† BGE-M3: Semantic Embeddings (ML)'")
else:
    print("‚ùå BGE-M3 –º–µ—Ç–æ–¥ –ù–ï –±—É–¥–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω (–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")

print("\n" + "=" * 80)
print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø")
print("=" * 80)
print("\n1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Expert Excel Matcher")
print("2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤")
print("3. –ù–∞–π–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: 'üß† BGE-M3: Semantic Embeddings (ML)'")
print("\n–ï—Å–ª–∏ –º–µ—Ç–æ–¥–∞ –ù–ï–¢ –≤ —Å–ø–∏—Å–∫–µ:")
print("   ‚Üí BGE_AVAILABLE = False")
print("   ‚Üí –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É: pip install FlagEmbedding")
print("\n–ï—Å–ª–∏ –º–µ—Ç–æ–¥ –ï–°–¢–¨ –≤ —Å–ø–∏—Å–∫–µ, –Ω–æ –≤—ã–¥–∞—ë—Ç 0:")
print("   ‚Üí –ü—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ (–Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞)")
